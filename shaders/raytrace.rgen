#version 460
#extension GL_EXT_ray_tracing : require

struct Material {
  vec3 ambient;
  vec3 diffuse;
  vec3 specular;
  vec3 emission;
};

layout(location = 0) rayPayloadEXT Payload {
	//TODO
    vec3 hitValue;
    int hitType;
    int  depth;
    vec3 attenuation;
    int  done;
    vec3 rayOrigin;
    vec3 rayDir;
} payload;

layout(binding = 0) uniform UniformBufferObject {
    mat4 view;
    mat4 inv_view;
    mat4 proj;
    mat4 inv_proj;
    vec4 ao_opt;
} ubo;

layout(binding = 3, rgba32f) uniform image2D image;

layout(binding = 2) uniform accelerationStructureEXT topLevelAS;


void main() {
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV        = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2       d           = inUV * 2.0 - 1.0;

    vec4 origin    = ubo.inv_view * vec4(0, 0, 0, 1);
    vec4 target    = ubo.inv_proj * vec4(d.x, d.y, 1, 1);
    vec4 direction = ubo.inv_view * vec4(normalize(target.xyz), 0);

    uint  rayFlags = gl_RayFlagsOpaqueEXT;
    float tMin     = 0.001;
    float tMax     = 10000.0;

    payload.hitType = 0;
    payload.depth = 0;
    payload.attenuation = vec3(1.0f, 1.0f, 1.0f);
    payload.done = 1;
    payload.rayOrigin = origin.xyz;
    payload.rayDir = direction.xyz;

    vec3 hitValue = vec3(0);

    for (;;) {

        traceRayEXT(topLevelAS,     // acceleration structure
                    rayFlags,       // rayFlags
                    0xFF,           // cullMask
                    0,              // sbtRecordOffset
                    0,              // sbtRecordStride
                    0,              // missIndex
                    origin.xyz,     // ray origin
                    tMin,           // ray min range
                    direction.xyz,  // ray direction
                    tMax,           // ray max range
                    0               // payload (location = 0)
        );

        hitValue += payload.hitValue * payload.attenuation;

        payload.depth++;
        if(payload.done == 1 || payload.depth >= 50)
          break;

        origin.xyz = payload.rayOrigin;
        direction.xyz = payload.rayDir;
        payload.done = 1;
    }

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(pow(hitValue, vec3(1.0/2.2,1.0/2.2,1.0/2.2)), 1.0));
}
